(import (vanity core))
(define-library (my list)
  (export car cadr cdr cons list pair?)
  (define-constant car ##vcore.car)
  (define-constant cdr ##vcore.cdr)
  (define-constant cons ##vcore.cons)
  (define list (lambda xs xs))
  (define (cadr x) (car (cdr x)))
  (define-constant pair? ##vcore.pair?))
(import (my list))
(letrec ()
  (define-constant x 3)
  (define y (+ 1 1))
  (exit (and (= 5 (+ x y)) (= 4 (let ((x 2)) (+ x y))) (equal? '(1 2 3) (list 1 2 3)) (= 1 (car '(1 2 3))))))

