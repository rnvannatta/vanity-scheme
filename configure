#!/bin/bash

echo "Configuring Vanity Scheme"

mkdir -p config/vanity/compiler/
mkdir -p config/x86_64-w64-mingw32/vanity/compiler/

read -p "Major Version:" major
read -p "Minor Version:" minor
read -p "Install Dir:" install
read -p "Emscripten Install Dir:" eminstall
read -p "Debug Build? (y/N):" debug

if [ -z "$major" ]; then major=0; fi
if [ -z "$minor" ]; then minor=0; fi
if [ -z "$install" ]; then install="/usr/local"; fi
if [ -z "$eminstall" ]; then
  if [ -z $EM_CACHE ]; then
    eminstall="/usr/share/emscripten/cache/sysroot";
  else
    eminstall=$EM_CACHE/sysroot;
  fi
fi
if [ "$debug" = "y" ]; then cflags="-O0 -g"; else cflags="-O3"; fi
if [ "$debug" = "y" ]; then scmflags="-O0 -g"; else scmflags="-O3"; fi

install="${install/#\~/$HOME}"
install=`realpath $install`

echo "Installing Vanity Scheme $major.$minor to $install with extra CFLAGS: $cflags and extra SCMFLAGS: $scmflags"
echo "and installing wasm to $eminstall"

echo "MAJOR := $major" > config.mk
echo "MINOR := $minor" >> config.mk
echo "INSTALL_DIR := $install" >> config.mk
echo "EMSCRIPTEN_INSTALL_DIR := $eminstall" >> config.mk
echo "CFLAGS += $cflags" >> config.mk
echo "SCMFLAGS += $scmflags" >> config.mk

cat << EOF > config/vanity/compiler/config.scm
(define-library (vanity compiler config)
  (export install-root version platform)
  (define version '($major $minor))
  (define install-root "$install/")
  (define platform 'linux))
EOF

cat << EOF > config/x86_64-w64-mingw32/vanity/compiler/config.scm
(define-library (vanity compiler config)
  (export install-root version platform)
  (define version '($major $minor))
  (define install-root #f)
  (define platform 'windows))
EOF
